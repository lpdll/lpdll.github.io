<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>elasticsearch(二)</title>
      <link href="2021/05/26/elasticsearch-2/"/>
      <url>2021/05/26/elasticsearch-2/</url>
      
        <content type="html"><![CDATA[<h3 id="cat用法"><a href="#cat用法" class="headerlink" title="cat用法"></a>cat用法</h3><ul><li>format：（字符串）表明请求返回的参数结构可配置：<ul><li>JSON：返回JSON格式的参数</li><li>YAML：返回YAML格式的参数<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;请求</span><br><span class="line">GET &#x2F;_cat&#x2F;master?format&#x3D;JSON</span><br><span class="line">&#x2F;&#x2F;返回</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;id&quot; : &quot;-HeJQJGQSBeZRQhtomWKrg&quot;,</span><br><span class="line">        &quot;host&quot; : &quot;127.0.0.1&quot;,</span><br><span class="line">        &quot;ip&quot; : &quot;127.0.0.1&quot;,</span><br><span class="line">        &quot;node&quot; : &quot;bogon&quot;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li></ul></li><li>h：（字符串）返回指定的列，指定列时用逗号分割  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;请求</span><br><span class="line">GET &#x2F;_cat&#x2F;master?h&#x3D;id,host&amp;format&#x3D;JSON</span><br><span class="line">&#x2F;&#x2F;返回</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;id&quot; : &quot;-HeJQJGQSBeZRQhtomWKrg&quot;,</span><br><span class="line">        &quot;host&quot; : &quot;127.0.0.1&quot;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li>help：（布尔）为true时返回帮助信息，默认为false  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;请求</span><br><span class="line">GET &#x2F;_cat&#x2F;master?help&#x3D;true</span><br><span class="line">&#x2F;&#x2F;返回</span><br><span class="line">id   |   | node id    </span><br><span class="line">host | h | host name  </span><br><span class="line">ip   |   | ip address</span><br><span class="line">node | n | node name</span><br></pre></td></tr></table></figure></li><li>local：(布尔)如果为true，则请求仅从本地节点检索信息。默认为false，表示从主节点检索信息。</li><li>s：（字符串）按指定的列进行排序，用逗号分割指定多个列  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;请求</span><br><span class="line">GET &#x2F;_cat&#x2F;aliases?s&#x3D;alias&amp;format&#x3D;JSON</span><br><span class="line">&#x2F;&#x2F;返回太多自己执行看</span><br></pre></td></tr></table></figure></li><li>v：（布尔）如果为true，则响应包括列标题。默认为false。  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;请求</span><br><span class="line">GET &#x2F;_cat&#x2F;master?v&#x3D;true</span><br><span class="line">&#x2F;&#x2F;返回</span><br><span class="line">id                     host      ip        node</span><br><span class="line">-HeJQJGQSBeZRQhtomWKrg 127.0.0.1 127.0.0.1 bogon</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> elasticsearch </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>elasticsearch(一)</title>
      <link href="2021/05/26/elasticsearch-1/"/>
      <url>2021/05/26/elasticsearch-1/</url>
      
        <content type="html"><![CDATA[<h3 id="准备elasticsearch运行环境"><a href="#准备elasticsearch运行环境" class="headerlink" title="准备elasticsearch运行环境"></a>准备elasticsearch运行环境</h3><p>Elasticsearch至少需要Java8，在下载之前运行下面内容检查java版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$JAVA_HOME</span></span><br></pre></td></tr></table></figure><p>如果没有安装可以去<a href="https://www.java.com/zh-CN/">Oracle</a> 网站下载适合的版本。<br>安装完JAVA之后就可以下载Elasticsearch<br><br></p><h3 id="Homebrew安装elasticsearch"><a href="#Homebrew安装elasticsearch" class="headerlink" title="Homebrew安装elasticsearch"></a>Homebrew安装elasticsearch</h3><p>使用Homebrew进行安装，首先需要创建Elastic Homebrew存储库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew tap elastic&#x2F;tap</span><br></pre></td></tr></table></figure><p>创建Elastic Homebrew存储库后，可以使用brew install安装Elasticsearch：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install elastic&#x2F;tap&#x2F;elasticsearch-full</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> elasticsearch </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>yii2 composer install 出错的解决方法</title>
      <link href="2021/05/13/composer_yii2/"/>
      <url>2021/05/13/composer_yii2/</url>
      
        <content type="html"><![CDATA[<p>下载yii2报下面错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Your requirements could not be resolved to an installable set of packages.</span><br></pre></td></tr></table></figure><p>经查找需要全局安装fxp/composer-asset-plugin。<br><br><br>使用下面命令下载包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer global require <span class="string">&quot;fxp/composer-asset-plugin:^1.4.1&quot;</span></span><br></pre></td></tr></table></figure><p>报下面错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Package fxp&#x2F;composer-asset-plugin has a PHP requirement incomp   atible with your PHP version, PHP extensions and Composer vers   ion</span><br></pre></td></tr></table></figure><p>解决方法：<br><br><br>将composer降级</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer self-update --1</span><br></pre></td></tr></table></figure><p>再执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer global require <span class="string">&quot;fxp/composer-asset-plugin:^1.4.1&quot;</span></span><br></pre></td></tr></table></figure><p>再将composer的版本升回来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer self-update</span><br></pre></td></tr></table></figure><p>即可</p>]]></content>
      
      
      <categories>
          
          <category> yii2 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>elasticsearch 7 添加用户名密码认证</title>
      <link href="2021/05/13/elasticsearch_password/"/>
      <url>2021/05/13/elasticsearch_password/</url>
      
        <content type="html"><![CDATA[<h3 id="修改ES配置"><a href="#修改ES配置" class="headerlink" title="修改ES配置"></a>修改ES配置</h3><p>在elasticsearch.yml配置文件中添加下面项</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xpack.security.enabled: true </span><br></pre></td></tr></table></figure><p>保存配置文件信息之后重启elasticsearch<br><br></p><h3 id="配置密码"><a href="#配置密码" class="headerlink" title="配置密码"></a>配置密码</h3><p>运行elasticsearch-setup-passwords interactive 引导你设置各种组件的密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">elasticsearch-setup-passwords interactive</span><br><span class="line">Initiating the setup of passwords for reserved users elastic,apm_system,kibana,kibana_system,logstash_system,beats_system,remote_monitoring_user.</span><br><span class="line">You will be prompted to enter passwords as the process progresses.</span><br><span class="line">Please confirm that you would like to continue [y&#x2F;N]y</span><br><span class="line"></span><br><span class="line">Enter password for [elastic]:</span><br><span class="line">Reenter password for [elastic]:</span><br><span class="line">Enter password for [apm_system]:</span><br><span class="line">Reenter password for [apm_system]:</span><br><span class="line">Enter password for [kibana_system]:</span><br><span class="line">Reenter password for [kibana_system]:</span><br><span class="line">Enter password for [logstash_system]:</span><br><span class="line">Reenter password for [logstash_system]:</span><br><span class="line">Enter password for [beats_system]:</span><br><span class="line">Reenter password for [beats_system]:</span><br><span class="line">Enter password for [remote_monitoring_user]:</span><br><span class="line">Reenter password for [remote_monitoring_user]:</span><br><span class="line">Changed password for user [apm_system]</span><br><span class="line">Changed password for user [kibana_system]</span><br><span class="line">Changed password for user [kibana]</span><br><span class="line">Changed password for user [logstash_system]</span><br><span class="line">Changed password for user [beats_system]</span><br><span class="line">Changed password for user [remote_monitoring_user]</span><br><span class="line">Changed password for user [elastic]</span><br></pre></td></tr></table></figure><h3 id="配置-kibana-yml文件访问es账号密码"><a href="#配置-kibana-yml文件访问es账号密码" class="headerlink" title="配置 kibana.yml文件访问es账号密码"></a>配置 kibana.yml文件访问es账号密码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">elasticsearch.username: &quot;elastic&quot;</span><br><span class="line">elasticsearch.password: &quot;123456&quot;</span><br></pre></td></tr></table></figure><h3 id="配置logstash输出到es"><a href="#配置logstash输出到es" class="headerlink" title="配置logstash输出到es"></a>配置logstash输出到es</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">output &#123;</span><br><span class="line">  elasticsearch&#123;</span><br><span class="line">    #es服务地址</span><br><span class="line">    hosts &#x3D;&gt;[&quot;localhost:9200&quot;]</span><br><span class="line">    user &#x3D;&gt; &quot;elastic&quot;</span><br><span class="line">    password &#x3D;&gt; &quot;123456&quot;</span><br><span class="line">    #索引名称</span><br><span class="line">    index &#x3D;&gt; &quot;test-log-%&#123;+YYYY.MM.dd&#125;&quot;</span><br><span class="line">  &#125;</span><br><span class="line">   stdout &#123; codec &#x3D;&gt; rubydebug &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> elasticsearch </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>filebeat+logstash收集json格式的日志</title>
      <link href="2021/05/12/elk_filebeat_logstash/"/>
      <url>2021/05/12/elk_filebeat_logstash/</url>
      
        <content type="html"><![CDATA[<h3 id="配置logstash"><a href="#配置logstash" class="headerlink" title="配置logstash"></a>配置logstash</h3><p>创建一个first-pipeline.conf文件，配置以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">  beats &#123;</span><br><span class="line">     host &#x3D;&gt; &quot;127.0.0.1&quot;</span><br><span class="line">     port &#x3D;&gt; 5044</span><br><span class="line">     type &#x3D;&gt; &quot;log4j&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"># The filter part of this file is commented out to indicate that it is</span><br><span class="line"># optional.</span><br><span class="line"> filter &#123;</span><br><span class="line"> &#125;</span><br><span class="line"> #控制台打印，便于调试和观察</span><br><span class="line">output &#123;</span><br><span class="line">   stdout &#123; codec &#x3D;&gt; rubydebug &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行下面命令查看配置是否有问题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin&#x2F;logstash -f first-pipeline.conf --config.test_and_exit</span><br></pre></td></tr></table></figure><p>看到有显示Configuration OK，标识配置没有问题，一些WARN的错误可以直接无视<br><br><br>执行下面代码启动logstash</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin&#x2F;logstash -f first-pipeline.conf --config.reload.automatic</span><br></pre></td></tr></table></figure><h3 id="配置filebeat"><a href="#配置filebeat" class="headerlink" title="配置filebeat"></a>配置filebeat</h3><p>filebeat.yml——修改两个地方：input和output</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">filebeat.inputs:</span><br><span class="line">- type: log</span><br><span class="line">  enabled: true</span><br><span class="line">#日志存放的路径，从根目录开始</span><br><span class="line">  paths: </span><br><span class="line">    - &#x2F;var&#x2F;log&#x2F;*log</span><br><span class="line">  json.keys_under_root: true</span><br><span class="line">  json.overwrite_keys: true</span><br><span class="line">#这里ip地址和端口填安装logstash的主机ip和对应logstash开放端口</span><br><span class="line">output.logstash:</span><br><span class="line">  hosts: [&quot;localhost:5044&quot;]</span><br></pre></td></tr></table></figure><p>直接修改filebeat.yml文件有可能不生效，可以把原文件修改文件名然后自己重新创建filebeat.yml文件<br><br><br>配置完成后运行下面代码启动filebeat</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filebeat -e -c filebeat.yml -d &quot;Publish&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ELK </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo在文章中添加图片</title>
      <link href="2021/05/07/hexo_quote_image/"/>
      <url>2021/05/07/hexo_quote_image/</url>
      
        <content type="html"><![CDATA[<h3 id="hexo-添加图片插件"><a href="#hexo-添加图片插件" class="headerlink" title="hexo 添加图片插件"></a>hexo 添加图片插件</h3><p>安装图片插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>在_config.yml配置文件中，修改为 post_asset_folder: true， 然后新建一篇文章</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post ceshi</span><br></pre></td></tr></table></figure><p>这个时候会出现一个ceshi.md 和 ceshi的文件夹<br><br>文件夹中放入要展示的图片文件,使用macdown语法就可以在文章中引用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[test](1.jpg)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>字符串的二进制安全</title>
      <link href="2021/05/07/php_string_safe/"/>
      <url>2021/05/07/php_string_safe/</url>
      
        <content type="html"><![CDATA[<h3 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h3><p>PHP在处理带二进制字符的字符串时，程序不会对其中的数据做任何限制、过滤或者假设，数据在写入时是什么样的，它被读取是就是什么样，这种能力称为字符串的二进制安全<br><br/></p><h4 id="举例说明："><a href="#举例说明：" class="headerlink" title="举例说明："></a>举例说明：</h4><ul><li><p>C代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">main()&#123;</span><br><span class="line">    <span class="keyword">char</span> a[] = <span class="string">&quot;aaa\0b&quot;</span>; <span class="comment">/*带有二进制数据的字符串*/</span></span><br><span class="line">    <span class="keyword">char</span> b[] = <span class="string">&quot;aaa\0c&quot;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="built_in">strcmp</span>(a,b)); <span class="comment">/*输出0*/</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="built_in">strlen</span>(b));<span class="comment">/*输出3*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>C认为a和b这两个变量的值相等，b的长度为3；</p></li><li><p>PHP代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&quot;aaa\0b&quot;</span>;<span class="comment">/*带有二进制数据的字符串*/</span></span><br><span class="line"><span class="variable">$b</span> = <span class="string">&quot;bbb\0c&quot;</span>;</span><br><span class="line">var_dump(strcmp(<span class="variable">$b</span>,<span class="variable">$a</span>)); <span class="comment">/*输出1*/</span></span><br><span class="line">var_dump(strlen(<span class="variable">$b</span>));<span class="comment">/*输出5*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>PHP认为a和b这两个变量的值不相等，且b的长度是5</p><br>对于C语言来说，"\0"就是字符串的结束，当读取字符串"aaa\0b"时，读到"\0"就会默认字符串读取已经结束<br>对于PHP7来说，其通过zend_string结构体对字符串重新封装，读取的数据长度以自身结构体len值为准，保证了字符串读写的二进制安全</li></ul>]]></content>
      
      
      <categories>
          
          <category> PHP7学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>mac下修改docker国内镜像</title>
      <link href="2021/04/27/registry_mirrors/"/>
      <url>2021/04/27/registry_mirrors/</url>
      
        <content type="html"><![CDATA[<h3 id="修改国内镜像"><a href="#修改国内镜像" class="headerlink" title="修改国内镜像"></a>修改国内镜像</h3><p>docker =&gt; Preferences<br><img src="/2021/04/27/registry_mirrors/preferences.png"><br>docker Engine 编辑配置文件<br><img src="/2021/04/27/registry_mirrors/dockerEngine.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot;registry-mirrors&quot;: [</span><br><span class="line">   &quot;https:&#x2F;&#x2F;md4nbj2f.mirror.aliyuncs.com&quot;,</span><br><span class="line">   &quot;https:&#x2F;&#x2F;docker.mirrors.ustc.edu.cn&quot;,</span><br><span class="line">   &quot;https:&#x2F;&#x2F;hub-mirror.c.163.com&quot;</span><br><span class="line"> ]</span><br></pre></td></tr></table></figure><p>点击Apply &amp; Restart按钮</p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>JS清空input[type=file]的值</title>
      <link href="2021/04/26/web/clear_input_file/"/>
      <url>2021/04/26/web/clear_input_file/</url>
      
        <content type="html"><![CDATA[<p>js 不能操作 input[type=file]，但可以将这个 input 的 dom 元素删除掉,再新增一个，或者替换掉</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#UploadFile&quot;</span>).replaceWith(<span class="string">&#x27;&lt;input id=&quot;UploadFile&quot; type=&quot;file&quot;/&gt;&#x27;</span>);</span><br></pre></td></tr></table></figure><p>替换input框之后 input[type=file] 如果不是使用delegate绑定的事件，那么原本绑定的事件就会失效。<br>delegate() 方法为指定的元素（属于被选元素的子元素）添加一个或多个事件处理程序，并规定当这些事件发生时运行的函数。<br>使用 delegate() 方法的事件处理程序适用于当前或未来的元素（比如由脚本创建的新元素）。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).delegate(<span class="string">&quot;#UploadFile&quot;</span>,<span class="string">&quot;change&quot;</span>,<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端相关 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>form表单提交后重置表单失效解决</title>
      <link href="2021/04/26/web/reset_form_after_submit/"/>
      <url>2021/04/26/web/reset_form_after_submit/</url>
      
        <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>页面内提供了数据查询功能，查询字段为姓名和手机号，提交查询请求之后，重置按钮失效；但是在查询之前执行重置的话是可行的。</p><h3 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h3><p>type=”reset”的input标签，点击后只是重置到默认值，这就很好解释了为什么不点击查询按钮可以重置表单数据为空，<br>而在点击了查询(submit类型)按钮之后，表单各数据内容就等于有值了，所以点击重置不能达到预期重置表单数据为空的目的。</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;form&quot;</span>).on(<span class="string">&quot;click&quot;</span>, <span class="string">&quot;button[type=&#x27;reset&#x27;]&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//清空所有type为text的值</span></span><br><span class="line">    <span class="keyword">var</span> $inputs = $(<span class="string">&quot;form&quot;</span>).find(<span class="string">&quot;input[type=&#x27;text&#x27;]&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; $inputs.length;i++)&#123;</span><br><span class="line">        $($inputs[i]).val(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//清空select框的值</span></span><br><span class="line">    $(<span class="string">&quot;#channelHtml&quot;</span>).val(<span class="string">&quot;&quot;</span>).trigger(<span class="string">&#x27;change&#x27;</span>);<span class="comment">//下拉框重置</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端相关 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>js读取或修改url中的参数</title>
      <link href="2021/04/26/web/js_url_read_update/"/>
      <url>2021/04/26/web/js_url_read_update/</url>
      
        <content type="html"><![CDATA[<h3 id="读取url的某个参数"><a href="#读取url的某个参数" class="headerlink" title="读取url的某个参数"></a>读取url的某个参数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取URL参数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetQueryString</span>(<span class="params">name</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&quot;(^|&amp;)&quot;</span> + name + <span class="string">&quot;=([^&amp;]*)(&amp;|$)&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> r = <span class="built_in">window</span>.location.search.substr(<span class="number">1</span>).match(reg);</span><br><span class="line">    <span class="keyword">if</span> (r != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">unescape</span>(r[<span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="修改url的某个参数"><a href="#修改url的某个参数" class="headerlink" title="修改url的某个参数"></a>修改url的某个参数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//替换指定传入参数的值,paramName为参数,replaceWith为新值,并跳转</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">replaceParamVal</span>(<span class="params">paramName,replaceWith</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> oUrl = <span class="built_in">this</span>.location.href.toString();</span><br><span class="line">    <span class="keyword">var</span> re=<span class="built_in">eval</span>(<span class="string">&#x27;/(&#x27;</span>+ paramName+<span class="string">&#x27;=)([^&amp;]*)/gi&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> nUrl = oUrl.replace(re,paramName+<span class="string">&#x27;=&#x27;</span>+replaceWith);</span><br><span class="line">    <span class="built_in">this</span>.location = nUrl;</span><br><span class="line">　　<span class="built_in">window</span>.location.href=nUrl</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例如url为：<a href="http://xxxx.cn/pc/meeting/card.html?userId=566&amp;modid=1133&amp;puid=9">http://xxxx.cn/pc/meeting/card.html?userId=566&amp;modid=1133&amp;puid=9</a><br>如果希望修改userId的值为333，那么调用方法：replaceParamVal(“userId”,”333”)<br>URL就会变成：<a href="http://xxx.cn/pc/meeting/card.html?userId=333">http://xxx.cn/pc/meeting/card.html?userId=333</a><br>然后自动跳转到新的url。</p>]]></content>
      
      
      <categories>
          
          <category> 前端相关 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP7新特性简介</title>
      <link href="2021/04/25/php/study/php7_new_features/"/>
      <url>2021/04/25/php/study/php7_new_features/</url>
      
        <content type="html"><![CDATA[<p>PHP7除了在性能方面有极大提升外，还添加了很多新的特性</p><h3 id="太空船操作符"><a href="#太空船操作符" class="headerlink" title="太空船操作符"></a>太空船操作符</h3><p>太空船操作符用于比较两个表达式</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//整数</span></span><br><span class="line"><span class="keyword">echo</span> <span class="number">1</span> &lt;=&gt; <span class="number">1</span>; <span class="comment">//相等时返回0</span></span><br><span class="line"><span class="keyword">echo</span> <span class="number">1</span> &lt;=&gt; <span class="number">2</span>; <span class="comment">//小于时返回-1</span></span><br><span class="line"><span class="keyword">echo</span> <span class="number">2</span> &lt;=&gt; <span class="number">1</span>; <span class="comment">//大于时返回1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//浮点数</span></span><br><span class="line"><span class="keyword">echo</span> <span class="number">1.5</span> &lt;=&gt; <span class="number">1.5</span>; <span class="comment">//相等时返回0</span></span><br><span class="line"><span class="keyword">echo</span> <span class="number">1.5</span> &lt;=&gt; <span class="number">2.5</span>; <span class="comment">//小于时返回-1</span></span><br><span class="line"><span class="keyword">echo</span> <span class="number">2.5</span> &lt;=&gt; <span class="number">1.5</span>; <span class="comment">//大于时返回1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//字符串</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;a&#x27;</span> &lt;=&gt; <span class="string">&#x27;a&#x27;</span>; <span class="comment">//相等时返回0</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;a&#x27;</span> &lt;=&gt; <span class="string">&#x27;b&#x27;</span>; <span class="comment">//小于时返回-1</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;b&#x27;</span> &lt;=&gt; <span class="string">&#x27;a&#x27;</span>; <span class="comment">//大于时返回1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="标量类型声明和返回值得类型声明"><a href="#标量类型声明和返回值得类型声明" class="headerlink" title="标量类型声明和返回值得类型声明"></a>标量类型声明和返回值得类型声明<br/></h3><h4 id="PHP7可以对参数做声明"><a href="#PHP7可以对参数做声明" class="headerlink" title="PHP7可以对参数做声明"></a>PHP7可以对参数做声明</h4><ul><li>字符串（string）</li><li>整型（int）</li><li>浮点型（float）</li><li>布尔型（bool）</li><li>参数类型前面加上”？”，表示入参或出参值要么是null，要么是声明的类型</li><li>函数的返回类型可以定义void，无论是否声明严格模式，只要函数中有”return;”以外其他的return都会报错<br/> </li><li><font color='red'>注意：入参的参数的类型不能是void</font><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span> (strict_types = <span class="number">1</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">?<span class="keyword">int</span> <span class="variable">$a</span></span>) : ?<span class="title">int</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$a</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var_dump(test(<span class="literal">null</span>)); <span class="comment">//NULL</span></span><br><span class="line">var_dump(test(<span class="number">1</span>)); <span class="comment">//1</span></span><br><span class="line">var_dump(test(<span class="string">&#x27;a&#x27;</span>)); <span class="comment">//ERROR</span></span><br></pre></td></tr></table></figure><h4 id="PHP7类型声明模式"><a href="#PHP7类型声明模式" class="headerlink" title="PHP7类型声明模式"></a>PHP7类型声明模式</h4></li><li>严格模式：严格模式下，传入的类型和声明的类型不一致会报错</li><li>默认模式：默认模式下，传入的类型和声明的类型不一致会尝试进行类型转换</li><li>模式开启方式<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span>(strict_types = <span class="number">1</span>);</span><br></pre></td></tr></table></figure><h3 id="null合并操作符"><a href="#null合并操作符" class="headerlink" title="null合并操作符"></a>null合并操作符</h3>PHP7新的语法糖 “??” ,如果变量存在且值不为null，它返回自身的值，否则返回它的第二个操作数<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$page</span> = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>]) ? <span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>] ? <span class="number">0</span>; <span class="comment">//PHP7之前的写法</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$page</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>] ?? <span class="number">0</span>; <span class="comment">//PHP7的写法</span></span><br><span class="line"><span class="variable">$page</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>] ?? <span class="variable">$_POST</span>[<span class="string">&#x27;page&#x27;</span>] ?? <span class="number">0</span>;<span class="comment">//也可以这样写</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="常量数组"><a href="#常量数组" class="headerlink" title="常量数组"></a>常量数组</h3><p>PHP7之前无法通过define来定义数组常量,PHP7支持</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">define(<span class="string">&#x27;ANIMALS&#x27;</span>,[</span><br><span class="line">    <span class="string">&#x27;dog&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;cat&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;bird&#x27;</span></span><br><span class="line">]);</span><br></pre></td></tr></table></figure><h3 id="namespace-批量导入"><a href="#namespace-批量导入" class="headerlink" title="namespace 批量导入"></a>namespace 批量导入</h3><p>PHP7之前导入方式：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Space</span>\<span class="title">ClassA</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Space</span>\<span class="title">ClassB</span>;</span><br></pre></td></tr></table></figure><p>PHP7之后导入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Space</span>\&#123;<span class="title">ClassA</span>,<span class="title">ClassB</span>&#125;;</span><br></pre></td></tr></table></figure><h3 id="throwable接口"><a href="#throwable接口" class="headerlink" title="throwable接口"></a>throwable接口</h3><p>PHP7之前代码中有语法错误，或者fatal error，程序会直接报错。PHP7中做了改变，<br>PHP7实现了全局throwable接口，原来的Exception和Error实现了该接口，可以被try/catch块捕获。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">undefindfunc();</span><br><span class="line">&#125;<span class="keyword">catch</span> (<span class="built_in">Error</span> <span class="variable">$e</span>)&#123;</span><br><span class="line">var_dump(<span class="variable">$e</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line"></span><br><span class="line">set_exception_handler(<span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$e</span></span>)</span>&#123;</span><br><span class="line">var_dump(<span class="variable">$e</span>);</span><br><span class="line">&#125;);</span><br><span class="line">undefindfunc();</span><br></pre></td></tr></table></figure><h3 id="Closure-call"><a href="#Closure-call" class="headerlink" title="Closure::call()"></a>Closure::call()</h3><p>PHP7之前，需要动态的给一个对象添加方法时，可以通过Closure来复制一个闭包对象，并绑定到一个$this对象和类作用域</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$num</span> = <span class="number">1</span>;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$f</span> = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;num + <span class="number">1</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable">$test</span> = <span class="variable">$f</span>-&gt;bindTo(<span class="keyword">new</span> Test,<span class="string">&#x27;Test&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$test</span>();</span><br></pre></td></tr></table></figure><p>PHP7中新添加了Closure::call()，可以通过call来暂时绑定一个闭包对象到$this对象，并调用它</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$num</span> = <span class="number">1</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="variable">$f</span> = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;num + <span class="number">1</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$f</span>-&gt;call(<span class="keyword">new</span> Test);</span><br></pre></td></tr></table></figure><h3 id="intdiv函数"><a href="#intdiv函数" class="headerlink" title="intdiv函数"></a>intdiv函数</h3><p>PHP7新增一个整除函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var_dump(intdiv(<span class="number">10</span>,<span class="number">3</span>));</span><br></pre></td></tr></table></figure><h3 id="list的方括号写法"><a href="#list的方括号写法" class="headerlink" title="list的方括号写法"></a>list的方括号写法</h3><p>PHP7之前写法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$arr</span> = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="keyword">list</span>(<span class="variable">$a</span>,<span class="variable">$b</span>,<span class="variable">$c</span>) = <span class="variable">$arr</span>; </span><br></pre></td></tr></table></figure><p>PHP7优化之后</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$arr</span> = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line">[<span class="variable">$a</span>,<span class="variable">$b</span>,<span class="variable">$c</span>] = <span class="variable">$arr</span>;</span><br></pre></td></tr></table></figure><p><font color='red'>注意：这里的[]不是数组的意思，知识list的简略形式</font></p><h3 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h3><p>PHP7除了以上特性外，还有一些其它的，例如：foreach遍历数组时不在修改内部指针、移除了ASP和<br>script PHP标签，移除了$HTTP_RAW_POST_DATA、匿名类、类常量可见性等。</p>]]></content>
      
      
      <categories>
          
          <category> PHP7学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>next不蒜子配置修改</title>
      <link href="2021/04/23/hexo-next/next-busuanzi/"/>
      <url>2021/04/23/hexo-next/next-busuanzi/</url>
      
        <content type="html"><![CDATA[<h2 id="next配置不蒜子统计访问量不生效"><a href="#next配置不蒜子统计访问量不生效" class="headerlink" title="next配置不蒜子统计访问量不生效"></a>next配置不蒜子统计访问量不生效</h2><ul><li>不生效原因，由于<a href="http://busuanzi.ibruce.info/">不蒜子</a>修改域名，next用的还是以前的域名，导致统计引入js脚本报错<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script async src=<span class="string">&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li>修改后引入脚本<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script async src=<span class="string">&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> next配置 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/04/21/hello-world/"/>
      <url>2021/04/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
